services:
  auth-service:
    build:
      context: ../auth-service
      dockerfile: Dockerfile
    container_name: auth_service
    env_file:
      - .env
    ports:
      - "127.0.0.1:8081:8081"
    depends_on:
      auth-db:
        condition: service_healthy
    restart: unless-stopped

  auth-db:
    image: postgres:15
    container_name: auth_db
    environment:
      - POSTGRES_DB=${AUTH_DB_NAME}
      - POSTGRES_USER=${AUTH_DB_USER}
      - POSTGRES_PASSWORD=${AUTH_DB_PASS}
    ports:
      - "127.0.0.1:5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${AUTH_DB_USER} -d ${AUTH_DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - auth_db_data:/var/lib/postgresql/data
    restart: unless-stopped

  core-service:
    build:
      context: ../core-service
      dockerfile: Dockerfile
    container_name: core_service
    env_file:
      - .env
    environment:
      - CORE_DB_NAME=${CORE_DB_NAME}
      - CORE_DB_USER=${CORE_DB_USER}
      - CORE_DB_PASS=${CORE_DB_PASS}
      - MQTT_BROKER_USER=${MQTT_BROKER_USER}
      - MQTT_BROKER_PASS=${MQTT_BROKER_PASS}
    ports:
      - "127.0.0.1:8082:8082"
    restart: unless-stopped

  core-db:
    image: postgres:15
    container_name: core_db
    environment:
      POSTGRES_DB: ${CORE_DB_NAME}
      POSTGRES_USER: ${CORE_DB_USER}
      POSTGRES_PASSWORD: ${CORE_DB_PASS}
    ports:
      - "127.0.0.1:5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${CORE_DB_USER} -d ${CORE_DB_NAME}"]
      interval: 30s
      timeout: 5s
      retries: 5
    volumes:
      - core_db_data:/var/lib/postgresql/data
    restart: unless-stopped


  mqtt-broker:
    image: eclipse-mosquitto:2.0
    container_name: mqtt_broker
    env_file:
      - .env
    ports:
      - "1883:1883"
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/mqtt_init.sh:/mqtt_init.sh
    entrypoint: ["/mqtt_init.sh"]
    restart: unless-stopped

  gateway:
    build:
      context: ../gateway
      dockerfile: Dockerfile
    container_name: gateway
    ports:
      - "8080:8080"
    depends_on:
      - auth-service
      - core-service
    restart: unless-stopped

volumes:
  auth_db_data:
  core_db_data:
